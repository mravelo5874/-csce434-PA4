Terminals unused in grammar

    INVALID


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: $@1 PRGM declarations BGN statementSequence END

    3 $@2: %empty

    4 declarations: $@2 VAR ID AS type SC declarations
    5             | %empty

    6 type: INT

    7 $@3: %empty

    8 statementSequence: $@3 statement SC statementSequence
    9                  | %empty

   10 statement: assignment
   11          | ifStatement
   12          | whileStatement
   13          | writeInt
   14          | %empty

   15 assignment: ID ASGN expression
   16           | ID ASGN READ

   17 ifStatement: IF expression THEN statementSequence elseClause ENDIF

   18 elseClause: ELSE statementSequence
   19           | %empty

   20 whileStatement: WHL expression DO statementSequence ENDWHL

   21 writeInt: WRITE expression

   22 expression: simpleExpression
   23           | simpleExpression COMP expression

   24 simpleExpression: term ADD simpleExpression
   25                 | term OR simpleExpression
   26                 | term

   27 term: factor MULT term
   28     | factor AND term
   29     | factor

   30 factor: primary POWER factor
   31       | primary

   32 primary: ID
   33        | NUM
   34        | LP expression RP
   35        | ADD primary
   36        | NOT primary


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    NUM (258) 33
    ID (259) 4 15 16 32
    LP (260) 34
    RP (261) 34
    ASGN (262) 15 16
    SC (263) 4 8
    AS (264) 4
    POWER (265) 30
    MULT (266) 27
    ADD (267) 24 35
    COMP (268) 23
    IF (269) 17
    THEN (270) 17
    ELSE (271) 18
    BGN (272) 2
    ENDIF (273) 17
    WHL (274) 20
    ENDWHL (275) 20
    DO (276) 20
    PRGM (277) 2
    END (278) 2
    VAR (279) 4
    INT (280) 6
    AND (281) 28
    OR (282) 25
    NOT (283) 36
    READ (284) 16
    WRITE (285) 21
    INVALID (286)


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program (33)
        on left: 2
        on right: 0
    $@1 (34)
        on left: 1
        on right: 2
    declarations (35)
        on left: 4 5
        on right: 2 4
    $@2 (36)
        on left: 3
        on right: 4
    type (37)
        on left: 6
        on right: 4
    statementSequence (38)
        on left: 8 9
        on right: 2 8 17 18 20
    $@3 (39)
        on left: 7
        on right: 8
    statement (40)
        on left: 10 11 12 13 14
        on right: 8
    assignment (41)
        on left: 15 16
        on right: 10
    ifStatement (42)
        on left: 17
        on right: 11
    elseClause (43)
        on left: 18 19
        on right: 17
    whileStatement (44)
        on left: 20
        on right: 12
    writeInt (45)
        on left: 21
        on right: 13
    expression (46)
        on left: 22 23
        on right: 15 17 20 21 23 34
    simpleExpression (47)
        on left: 24 25 26
        on right: 22 23 24 25
    term (48)
        on left: 27 28 29
        on right: 24 25 26 27 28
    factor (49)
        on left: 30 31
        on right: 27 28 29 30
    primary (50)
        on left: 32 33 34 35 36
        on right: 30 31 35 36


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 ($@1)

    program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    2 program: $@1 . PRGM declarations BGN statementSequence END

    PRGM  shift, and go to state 4


State 3

    0 $accept: program $end .

    $default  accept


State 4

    2 program: $@1 PRGM . declarations BGN statementSequence END

    BGN       reduce using rule 5 (declarations)
    $default  reduce using rule 3 ($@2)

    declarations  go to state 5
    $@2           go to state 6


State 5

    2 program: $@1 PRGM declarations . BGN statementSequence END

    BGN  shift, and go to state 7


State 6

    4 declarations: $@2 . VAR ID AS type SC declarations

    VAR  shift, and go to state 8


State 7

    2 program: $@1 PRGM declarations BGN . statementSequence END

    END       reduce using rule 9 (statementSequence)
    $default  reduce using rule 7 ($@3)

    statementSequence  go to state 9
    $@3                go to state 10


State 8

    4 declarations: $@2 VAR . ID AS type SC declarations

    ID  shift, and go to state 11


State 9

    2 program: $@1 PRGM declarations BGN statementSequence . END

    END  shift, and go to state 12


State 10

    8 statementSequence: $@3 . statement SC statementSequence

    ID     shift, and go to state 13
    IF     shift, and go to state 14
    WHL    shift, and go to state 15
    WRITE  shift, and go to state 16

    $default  reduce using rule 14 (statement)

    statement       go to state 17
    assignment      go to state 18
    ifStatement     go to state 19
    whileStatement  go to state 20
    writeInt        go to state 21


State 11

    4 declarations: $@2 VAR ID . AS type SC declarations

    AS  shift, and go to state 22


State 12

    2 program: $@1 PRGM declarations BGN statementSequence END .

    $default  reduce using rule 2 (program)


State 13

   15 assignment: ID . ASGN expression
   16           | ID . ASGN READ

    ASGN  shift, and go to state 23


State 14

   17 ifStatement: IF . expression THEN statementSequence elseClause ENDIF

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    expression        go to state 29
    simpleExpression  go to state 30
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 15

   20 whileStatement: WHL . expression DO statementSequence ENDWHL

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    expression        go to state 34
    simpleExpression  go to state 30
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 16

   21 writeInt: WRITE . expression

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    expression        go to state 35
    simpleExpression  go to state 30
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 17

    8 statementSequence: $@3 statement . SC statementSequence

    SC  shift, and go to state 36


State 18

   10 statement: assignment .

    $default  reduce using rule 10 (statement)


State 19

   11 statement: ifStatement .

    $default  reduce using rule 11 (statement)


State 20

   12 statement: whileStatement .

    $default  reduce using rule 12 (statement)


State 21

   13 statement: writeInt .

    $default  reduce using rule 13 (statement)


State 22

    4 declarations: $@2 VAR ID AS . type SC declarations

    INT  shift, and go to state 37

    type  go to state 38


State 23

   15 assignment: ID ASGN . expression
   16           | ID ASGN . READ

    NUM   shift, and go to state 24
    ID    shift, and go to state 25
    LP    shift, and go to state 26
    ADD   shift, and go to state 27
    NOT   shift, and go to state 28
    READ  shift, and go to state 39

    expression        go to state 40
    simpleExpression  go to state 30
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 24

   33 primary: NUM .

    $default  reduce using rule 33 (primary)


State 25

   32 primary: ID .

    $default  reduce using rule 32 (primary)


State 26

   34 primary: LP . expression RP

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    expression        go to state 41
    simpleExpression  go to state 30
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 27

   35 primary: ADD . primary

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    primary  go to state 42


State 28

   36 primary: NOT . primary

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    primary  go to state 43


State 29

   17 ifStatement: IF expression . THEN statementSequence elseClause ENDIF

    THEN  shift, and go to state 44


State 30

   22 expression: simpleExpression .
   23           | simpleExpression . COMP expression

    COMP  shift, and go to state 45

    $default  reduce using rule 22 (expression)


State 31

   24 simpleExpression: term . ADD simpleExpression
   25                 | term . OR simpleExpression
   26                 | term .

    ADD  shift, and go to state 46
    OR   shift, and go to state 47

    $default  reduce using rule 26 (simpleExpression)


State 32

   27 term: factor . MULT term
   28     | factor . AND term
   29     | factor .

    MULT  shift, and go to state 48
    AND   shift, and go to state 49

    $default  reduce using rule 29 (term)


State 33

   30 factor: primary . POWER factor
   31       | primary .

    POWER  shift, and go to state 50

    $default  reduce using rule 31 (factor)


State 34

   20 whileStatement: WHL expression . DO statementSequence ENDWHL

    DO  shift, and go to state 51


State 35

   21 writeInt: WRITE expression .

    $default  reduce using rule 21 (writeInt)


State 36

    8 statementSequence: $@3 statement SC . statementSequence

    ELSE      reduce using rule 9 (statementSequence)
    ENDIF     reduce using rule 9 (statementSequence)
    ENDWHL    reduce using rule 9 (statementSequence)
    END       reduce using rule 9 (statementSequence)
    $default  reduce using rule 7 ($@3)

    statementSequence  go to state 52
    $@3                go to state 10


State 37

    6 type: INT .

    $default  reduce using rule 6 (type)


State 38

    4 declarations: $@2 VAR ID AS type . SC declarations

    SC  shift, and go to state 53


State 39

   16 assignment: ID ASGN READ .

    $default  reduce using rule 16 (assignment)


State 40

   15 assignment: ID ASGN expression .

    $default  reduce using rule 15 (assignment)


State 41

   34 primary: LP expression . RP

    RP  shift, and go to state 54


State 42

   35 primary: ADD primary .

    $default  reduce using rule 35 (primary)


State 43

   36 primary: NOT primary .

    $default  reduce using rule 36 (primary)


State 44

   17 ifStatement: IF expression THEN . statementSequence elseClause ENDIF

    ELSE      reduce using rule 9 (statementSequence)
    ENDIF     reduce using rule 9 (statementSequence)
    $default  reduce using rule 7 ($@3)

    statementSequence  go to state 55
    $@3                go to state 10


State 45

   23 expression: simpleExpression COMP . expression

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    expression        go to state 56
    simpleExpression  go to state 30
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 46

   24 simpleExpression: term ADD . simpleExpression

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    simpleExpression  go to state 57
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 47

   25 simpleExpression: term OR . simpleExpression

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    simpleExpression  go to state 58
    term              go to state 31
    factor            go to state 32
    primary           go to state 33


State 48

   27 term: factor MULT . term

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    term     go to state 59
    factor   go to state 32
    primary  go to state 33


State 49

   28 term: factor AND . term

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    term     go to state 60
    factor   go to state 32
    primary  go to state 33


State 50

   30 factor: primary POWER . factor

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    LP   shift, and go to state 26
    ADD  shift, and go to state 27
    NOT  shift, and go to state 28

    factor   go to state 61
    primary  go to state 33


State 51

   20 whileStatement: WHL expression DO . statementSequence ENDWHL

    ENDWHL    reduce using rule 9 (statementSequence)
    $default  reduce using rule 7 ($@3)

    statementSequence  go to state 62
    $@3                go to state 10


State 52

    8 statementSequence: $@3 statement SC statementSequence .

    $default  reduce using rule 8 (statementSequence)


State 53

    4 declarations: $@2 VAR ID AS type SC . declarations

    BGN       reduce using rule 5 (declarations)
    $default  reduce using rule 3 ($@2)

    declarations  go to state 63
    $@2           go to state 6


State 54

   34 primary: LP expression RP .

    $default  reduce using rule 34 (primary)


State 55

   17 ifStatement: IF expression THEN statementSequence . elseClause ENDIF

    ELSE  shift, and go to state 64

    $default  reduce using rule 19 (elseClause)

    elseClause  go to state 65


State 56

   23 expression: simpleExpression COMP expression .

    $default  reduce using rule 23 (expression)


State 57

   24 simpleExpression: term ADD simpleExpression .

    $default  reduce using rule 24 (simpleExpression)


State 58

   25 simpleExpression: term OR simpleExpression .

    $default  reduce using rule 25 (simpleExpression)


State 59

   27 term: factor MULT term .

    $default  reduce using rule 27 (term)


State 60

   28 term: factor AND term .

    $default  reduce using rule 28 (term)


State 61

   30 factor: primary POWER factor .

    $default  reduce using rule 30 (factor)


State 62

   20 whileStatement: WHL expression DO statementSequence . ENDWHL

    ENDWHL  shift, and go to state 66


State 63

    4 declarations: $@2 VAR ID AS type SC declarations .

    $default  reduce using rule 4 (declarations)


State 64

   18 elseClause: ELSE . statementSequence

    ENDIF     reduce using rule 9 (statementSequence)
    $default  reduce using rule 7 ($@3)

    statementSequence  go to state 67
    $@3                go to state 10


State 65

   17 ifStatement: IF expression THEN statementSequence elseClause . ENDIF

    ENDIF  shift, and go to state 68


State 66

   20 whileStatement: WHL expression DO statementSequence ENDWHL .

    $default  reduce using rule 20 (whileStatement)


State 67

   18 elseClause: ELSE statementSequence .

    $default  reduce using rule 18 (elseClause)


State 68

   17 ifStatement: IF expression THEN statementSequence elseClause ENDIF .

    $default  reduce using rule 17 (ifStatement)
